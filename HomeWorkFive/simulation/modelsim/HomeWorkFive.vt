// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "04/23/2019 19:46:40"
                                                                                
// Verilog Test Bench template for design : HomeWorkFive
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ns/ 1 ps
module HomeWorkFive_test();
// test vector input registers
reg [3:0] Data_in;
reg Load;
reg Send;
reg Sort;
reg clk;
reg rst;
// wires                                               
wire Busy;
wire [3:0]  Data_out;
wire Ready;
wire Waiting;
              
HomeWorkFive i1 (
	.Busy(Busy),
	.Data_in(Data_in),
	.Data_out(Data_out),
	.Load(Load),
	.Ready(Ready),
	.Send(Send),
	.Sort(Sort),
	.Waiting(Waiting),
	.clk(clk),
	.rst(rst)
);

initial	begin
	clk				=	0	;
	rst 			= 1;
	Load		=	0	;
	Sort			=	0	;
	Send		=	0	;
	Data_in	=	0	;
	
	#20 			rst			=	0	;
						Sort		=	1	;	
	#20 			Load	=	1	;					
	#200 		Load	=	0	;
	#1050	Send	=	1	;
	#2000;
	$stop;
	$display("Running testbench");                       
end    
 
initial	begin
	#60 Data_in		=	8		;
	#20 Data_in		=	3		;
	#20 Data_in		=	13	;
	#20 Data_in		=	2		;
	#20 Data_in		=	10	;
	#20 Data_in		=	6		;
	#20 Data_in		=	15	;
	#20 Data_in		=	11	;
end
 
always	begin                                         
	#10 clk			=		~clk	;                                     
end                                                                                           
endmodule

